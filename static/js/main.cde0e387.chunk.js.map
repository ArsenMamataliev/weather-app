{"version":3,"sources":["components/InputFields.js","components/loading/Loading.js","App.js","index.js"],"names":["InputFields","_ref","setCity","react_default","a","createElement","Fragment","onChange","e","target","value","Loading","props","className","WeatherTable","React","lazy","__webpack_require__","then","bind","App","_useState","useState","_useState2","Object","slicedToArray","city","_useState3","_useState4","weatherData","setWeatherData","useEffect","getWeatherInfo","asyncToGenerator","regenerator_default","mark","_callee","response","weatherInfo","wrap","_context","prev","next","fetch","concat","sent","json","data","stop","apply","this","arguments","style","color","components_InputFields","react","fallback","loading_Loading","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"oNAuBeA,EArBK,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QAMlB,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,UAAQE,SAPG,SAACC,GAChBN,EAAQM,EAAEC,OAAOC,SAOXP,EAAAC,EAAAC,cAAA,UAAQK,MAAQ,OAAhB,SACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAQ,WAAhB,aACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAQ,SAAhB,WACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAQ,SAAhB,WACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAQ,cAAhB,gBACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAQ,UAAhB,qBCSCC,MAvBf,SAAiBC,GACb,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,yCACXV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,oBACXV,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,gBChBdS,EAAeC,IAAMC,KAAK,kBAAMC,EAAAT,EAAA,GAAAU,KAAAD,EAAAE,KAAA,YA+BvBC,MA3Bf,WAAe,IAAAC,EACWC,mBAAS,OADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACArB,EADAqB,EAAA,GAAAI,EAEyBL,mBAAS,IAFlCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAENE,EAFMD,EAAA,GAEOE,EAFPF,EAAA,GAIbG,oBAAU,kBACVC,KAEA,CAACN,IAED,IAAMM,EAAc,eAAA/B,EAAAuB,OAAAS,EAAA,EAAAT,CAAAU,EAAA9B,EAAA+B,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAA9B,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEC,MAAK,qDAAAC,OACkBlB,EADlB,8BAAAkB,OACmDlB,EADnD,0CADP,cACfW,EADeG,EAAAK,KAAAL,EAAAE,KAAA,EAGKL,EAASS,OAHd,OAGfR,EAHeE,EAAAK,KAIrBf,EAAeQ,EAAYS,MAJN,wBAAAP,EAAAQ,SAAAZ,MAAH,yBAAAnC,EAAAgD,MAAAC,KAAAC,YAAA,GAOpB,OACEhD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAI+C,MAAS,CAACC,MAAO,UAArB,eACAlD,EAAAC,EAAAC,cAACiD,EAAD,CAAcpD,QAAWA,IACzBC,EAAAC,EAAAC,cAACkD,EAAA,SAAD,CAAUC,SAAYrD,EAAAC,EAAAC,cAACoD,EAAD,OACnBtD,EAAAC,EAAAC,cAACS,EAAD,CAAce,YAAeA,OCvBtC6B,IAASC,OACPxD,EAAAC,EAAAC,cAACF,EAAAC,EAAMwD,WAAP,KACEzD,EAAAC,EAAAC,cAACwD,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.cde0e387.chunk.js","sourcesContent":["import React from 'react';\n\nconst InputFields = ({setCity}) => {\n\n    const selectCity = (e) => {\n        setCity(e.target.value);\n       };\n       \n    return (\n        <>\n            <label> City </label>\n            <select onChange = {selectCity}> \n              <option value = 'Osh' > Osh </option>\n              <option value = 'Bishkek'> Bishkek </option>\n              <option value = 'Talas'> Talas </option>\n              <option value = 'Naryn'> Naryn </option>\n              <option value = 'Jalal-Abad'> Jalal-Abad </option>\n              <option value = 'Batken'> Batken </option> \n            </select>\n        </>\n    )\n} \n\nexport default InputFields;","import React from 'react';\nimport './loading.css'\n\nfunction Loading(props) {\n    return (\n        <div>\n            <div className=\"loadingio-spinner-spinner-a6kytvw0qq6\">\n                <div className=\"ldio-a7vkxztq27h\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React, { useState, useEffect, Suspense} from 'react';\nimport InputFields from './components/InputFields';\nimport Loading from './components/loading/Loading';\nconst WeatherTable = React.lazy(() => import('./components/WeatherTable'));\n\n\n\nfunction App() {\n  const [city, setCity] = useState('osh');\n  const [weatherData, setWeatherData] = useState([]);\n\n  useEffect(()=>\n  getWeatherInfo()\n  , \n  [city]);\n\n  const getWeatherInfo = async() => {\n    const response = await fetch(`\n    https://api.weatherbit.io/v2.0/current?city=${city}&country=Kyrgyzstan&state=${city}&key=473496066eff41f29580cae37f7bf178`);\n    const weatherInfo = await response.json();\n    setWeatherData(weatherInfo.data);\n  };\n          \n  return (\n    <div>\n      <h1 style = {{color: 'white'}}>KGZ.Weather</h1>\n      <InputFields  setCity = {setCity}/>\n      <Suspense fallback = {<Loading/>}>\n         <WeatherTable weatherData = {weatherData}/> \n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}